#include <Arduino.h>
#include "JkBmsUart.h"

unsigned long startParseTime = 0; // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

void setup() {
  	bmsSet.modeLog = ALL; //–í—ã–≤–æ–¥–∏–º –≤—Å–µ –ª–æ–≥–∏
	bmsSet.modeErrorLimit = true;
	bmsSet.uart = Serial1;

	Serial.begin(115200); // –ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π UART –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
	bmsSet.uart.begin(115200); // –ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π UART –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å BMS
	bmsSet.uart.setRxBufferSize(bmsSet.rxBufferSize); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞ –ø—Ä–∏–µ–º–∞ –¥–ª—è bmsSet.uart
}

void loop() {
    if (millis() - startParseTime >= 1000) { // –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–æ—Å–∞ BMS, –Ω–µ —á–∞—â–µ 100 –º—Å!
		startParseTime = millis(); // –§–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
		unsigned long startCycleTime = millis(); // –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ü–∏–∫–ª–∞
		uint32_t freeRAM = esp_get_free_heap_size();
		uint32_t totalRAM = ESP.getHeapSize();
		uint32_t usedRAM = totalRAM - freeRAM;
        
		bmsSendRecive(readAll); // –û–±—â–∞–µ–º—Å—è —Å BMS, –ø–∞—Ä—Å–∏–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
	
		Serial.print("üîπ –ó–∞–Ω—è—Ç–æ –û–ó–£: "); Serial.print(usedRAM);
		Serial.print(" –±–∞–π—Ç / –°–≤–æ–±–æ–¥–Ω–æ: "); Serial.print(freeRAM);
		Serial.println(" –±–∞–π—Ç");
		unsigned long timeCycle = millis() - startCycleTime; // –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
		Serial.print("üîπ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–∏–∫–ª–∞: ");
		Serial.print(timeCycle);
		Serial.println(" –º—Å");
    }
}